"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, NamedTuple, Optional, Sequence, TypeVar, Union
from langchain_core.runnables import Runnable, RunnableConfig
from langchain_core.runnables.utils import ConfigurableFieldSpec
from langgraph.constants import Send
from langgraph.utils.runnable import RunnableCallable

TYPE_SEND = Callable[[Sequence[tuple[str, Any]]], None]
R = TypeVar("R", bound=Runnable)
SKIP_WRITE = ...
PASSTHROUGH = ...
class ChannelWriteEntry(NamedTuple):
    channel: str
    value: Any = ...
    skip_none: bool = ...
    mapper: Optional[Callable] = ...


class ChannelWriteTupleEntry(NamedTuple):
    mapper: Callable[[Any], Optional[Sequence[tuple[str, Any]]]]
    value: Any = ...


class ChannelWrite(RunnableCallable):
    """Implements the logic for sending writes to CONFIG_KEY_SEND.
    Can be used as a runnable or as a static method to call imperatively."""
    writes: list[Union[ChannelWriteEntry, ChannelWriteTupleEntry, Send]]
    require_at_least_one_of: Optional[Sequence[str]]
    def __init__(self, writes: Sequence[Union[ChannelWriteEntry, ChannelWriteTupleEntry, Send]], *, tags: Optional[Sequence[str]] = ..., require_at_least_one_of: Optional[Sequence[str]] = ...) -> None:
        ...
    
    def get_name(self, suffix: Optional[str] = ..., *, name: Optional[str] = ...) -> str:
        ...
    
    @property
    def config_specs(self) -> list[ConfigurableFieldSpec]:
        ...
    
    @staticmethod
    def do_write(config: RunnableConfig, writes: Sequence[Union[ChannelWriteEntry, ChannelWriteTupleEntry, Send]], require_at_least_one_of: Optional[Sequence[str]] = ...) -> None:
        ...
    
    @staticmethod
    def is_writer(runnable: Runnable) -> bool:
        """Used by PregelNode to distinguish between writers and other runnables."""
        ...
    
    @staticmethod
    def register_writer(runnable: R) -> R:
        """Used to mark a runnable as a writer, so that it can be detected by is_writer.
        Instances of ChannelWrite are automatically marked as writers."""
        ...
    


