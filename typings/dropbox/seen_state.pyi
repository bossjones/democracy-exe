"""
This type stub file was generated by pyright.
"""

from stone.backends.python_rsrc import stone_base as bb

class PlatformType(bb.Union):
    """
    Possible platforms on which a user may view content.

    This class acts as a tagged union. Only one of the ``is_*`` methods will
    return true. To get the associated value of a tag (if one exists), use the
    corresponding ``get_*`` method.

    :ivar seen_state.PlatformType.web: The content was viewed on the web.
    :ivar seen_state.PlatformType.desktop: The content was viewed on a desktop
        client.
    :ivar seen_state.PlatformType.mobile_ios: The content was viewed on a mobile
        iOS client.
    :ivar seen_state.PlatformType.mobile_android: The content was viewed on a
        mobile android client.
    :ivar seen_state.PlatformType.api: The content was viewed from an API
        client.
    :ivar seen_state.PlatformType.unknown: The content was viewed on an unknown
        platform.
    :ivar seen_state.PlatformType.mobile: The content was viewed on a mobile
        client. DEPRECATED: Use mobile_ios or mobile_android instead.
    """
    _catch_all = ...
    web = ...
    desktop = ...
    mobile_ios = ...
    mobile_android = ...
    api = ...
    unknown = ...
    mobile = ...
    other = ...
    def is_web(self):
        """
        Check if the union tag is ``web``.

        :rtype: bool
        """
        ...
    
    def is_desktop(self):
        """
        Check if the union tag is ``desktop``.

        :rtype: bool
        """
        ...
    
    def is_mobile_ios(self):
        """
        Check if the union tag is ``mobile_ios``.

        :rtype: bool
        """
        ...
    
    def is_mobile_android(self):
        """
        Check if the union tag is ``mobile_android``.

        :rtype: bool
        """
        ...
    
    def is_api(self):
        """
        Check if the union tag is ``api``.

        :rtype: bool
        """
        ...
    
    def is_unknown(self):
        """
        Check if the union tag is ``unknown``.

        :rtype: bool
        """
        ...
    
    def is_mobile(self):
        """
        Check if the union tag is ``mobile``.

        :rtype: bool
        """
        ...
    
    def is_other(self):
        """
        Check if the union tag is ``other``.

        :rtype: bool
        """
        ...
    


PlatformType_validator = ...
ROUTES = ...
