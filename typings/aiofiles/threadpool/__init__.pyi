"""
This type stub file was generated by pyright.
"""

from _typeshed import FileDescriptorOrPath, Incomplete, OpenBinaryMode, OpenBinaryModeReading, OpenBinaryModeUpdating, OpenBinaryModeWriting, OpenTextMode
from asyncio import AbstractEventLoop
from collections.abc import Callable
from typing import Literal, overload
from typing_extensions import TypeAlias
from ..base import AiofilesContextManager
from .binary import AsyncBufferedIOBase, AsyncBufferedReader, AsyncFileIO, AsyncIndirectBufferedIOBase, _UnknownAsyncBinaryIO
from .text import AsyncTextIOWrapper, AsyncTextIndirectIOWrapper

_Opener: TypeAlias = Callable[[str, int], int]
@overload
def open(file: FileDescriptorOrPath, mode: OpenTextMode = ..., buffering: int = ..., encoding: str | None = ..., errors: str | None = ..., newline: str | None = ..., closefd: bool = ..., opener: _Opener | None = ..., *, loop: AbstractEventLoop | None = ..., executor: Incomplete | None = ...) -> AiofilesContextManager[AsyncTextIOWrapper]:
    ...

@overload
def open(file: FileDescriptorOrPath, mode: OpenBinaryMode, buffering: Literal[0], encoding: None = ..., errors: None = ..., newline: None = ..., closefd: bool = ..., opener: _Opener | None = ..., *, loop: AbstractEventLoop | None = ..., executor: Incomplete | None = ...) -> AiofilesContextManager[AsyncFileIO]:
    ...

@overload
def open(file: FileDescriptorOrPath, mode: OpenBinaryModeReading | OpenBinaryModeUpdating, buffering: Literal[-1, 1] = ..., encoding: None = ..., errors: None = ..., newline: None = ..., closefd: bool = ..., opener: _Opener | None = ..., *, loop: AbstractEventLoop | None = ..., executor: Incomplete | None = ...) -> AiofilesContextManager[AsyncBufferedReader]:
    ...

@overload
def open(file: FileDescriptorOrPath, mode: OpenBinaryModeWriting, buffering: Literal[-1, 1] = ..., encoding: None = ..., errors: None = ..., newline: None = ..., closefd: bool = ..., opener: _Opener | None = ..., *, loop: AbstractEventLoop | None = ..., executor: Incomplete | None = ...) -> AiofilesContextManager[AsyncBufferedIOBase]:
    ...

@overload
def open(file: FileDescriptorOrPath, mode: OpenBinaryMode, buffering: int = ..., encoding: None = ..., errors: None = ..., newline: None = ..., closefd: bool = ..., opener: _Opener | None = ..., *, loop: AbstractEventLoop | None = ..., executor: Incomplete | None = ...) -> AiofilesContextManager[_UnknownAsyncBinaryIO]:
    ...

stdin: AsyncTextIndirectIOWrapper
stdout: AsyncTextIndirectIOWrapper
stderr: AsyncTextIndirectIOWrapper
stdin_bytes: AsyncIndirectBufferedIOBase
stdout_bytes: AsyncIndirectBufferedIOBase
stderr_bytes: AsyncIndirectBufferedIOBase
