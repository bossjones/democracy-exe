"""
This type stub file was generated by pyright.
"""

aider_user_agent = ...
def install_playwright(io): # -> Literal[True] | None:
    ...

class Scraper:
    pandoc_available = ...
    playwright_available = ...
    playwright_instructions_shown = ...
    def __init__(self, print_error=..., playwright_available=..., verify_ssl=...) -> None:
        """
        `print_error` - a function to call to print error/debug info.
        `verify_ssl` - if False, disable SSL certificate verification when scraping.
        """
        ...
    
    def scrape(self, url): # -> str | None:
        """
        Scrape a url and turn it into readable markdown if it's HTML.
        If it's plain text or non-HTML, return it as-is.

        `url` - the URL to scrape.
        """
        ...
    
    def looks_like_html(self, content): # -> bool:
        """
        Check if the content looks like HTML.
        """
        ...
    
    def scrape_with_playwright(self, url): # -> tuple[None, None] | tuple[str | None, str | None]:
        ...
    
    def scrape_with_httpx(self, url): # -> tuple[str, Any] | tuple[None, None]:
        ...
    
    def try_pandoc(self): # -> None:
        ...
    
    def html_to_markdown(self, page_source): # -> str:
        ...
    


def slimdown_html(soup):
    ...

def main(url): # -> None:
    ...

if __name__ == "__main__":
    ...
