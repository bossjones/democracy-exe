"""
This type stub file was generated by pyright.
"""

_text_prefix = ...
_text_suffix = ...
class MarkdownStream:
    """Streaming markdown renderer that progressively displays content with a live updating window.

    Uses rich.console and rich.live to render markdown content with smooth scrolling
    and partial updates. Maintains a sliding window of visible content while streaming
    in new markdown text.
    """
    live = ...
    when = ...
    min_delay = ...
    live_window = ...
    def __init__(self, mdargs=...) -> None:
        """Initialize the markdown stream.

        Args:
            mdargs (dict, optional): Additional arguments to pass to rich Markdown renderer
        """
        ...
    
    def __del__(self): # -> None:
        """Destructor to ensure Live display is properly cleaned up."""
        ...
    
    def update(self, text, final=...): # -> None:
        """Update the displayed markdown content.

        Args:
            text (str): The markdown text received so far
            final (bool): If True, this is the final update and we should clean up

        Splits the output into "stable" older lines and the "last few" lines
        which aren't considered stable. They may shift around as new chunks
        are appended to the markdown text.

        The stable lines emit to the console above the Live window.
        The unstable lines emit into the Live window so they can be repainted.

        Markdown going to the console works better in terminal scrollback buffers.
        The live window doesn't play nice with terminal scrollback.
        """
        ...
    
    def find_minimal_suffix(self, text, match_lines=...): # -> None:
        """
        Splits text into chunks on blank lines "\n\n".
        """
        ...
    


if __name__ == "__main__":
    _text = ...
    _text = ...
    pm = ...
