"""
This type stub file was generated by pyright.
"""

ANY_GIT_ERROR = ...
ANY_GIT_ERROR = ...
class GitRepo:
    repo = ...
    aider_ignore_file = ...
    aider_ignore_spec = ...
    aider_ignore_ts = ...
    aider_ignore_last_check = ...
    subtree_only = ...
    ignore_file_cache = ...
    git_repo_error = ...
    def __init__(self, io, fnames, git_dname, aider_ignore_file=..., models=..., attribute_author=..., attribute_committer=..., attribute_commit_message_author=..., attribute_commit_message_committer=..., commit_prompt=..., subtree_only=...) -> None:
        ...
    
    def commit(self, fnames=..., context=..., message=..., aider_edits=...): # -> tuple[str | None, Any | Literal['(no commit message provided)']] | None:
        ...
    
    def get_rel_repo_dir(self): # -> git.types.PathLike:
        ...
    
    def get_commit_message(self, diffs, context): # -> Any | None:
        ...
    
    def get_diffs(self, fnames=...): # -> Any | None:
        ...
    
    def diff_commits(self, pretty, from_commit, to_commit): # -> Any:
        ...
    
    def get_tracked_files(self): # -> list[Any] | list[Any | str]:
        ...
    
    def normalize_path(self, path): # -> str:
        ...
    
    def refresh_aider_ignore(self): # -> None:
        ...
    
    def git_ignored_file(self, path): # -> bool | None:
        ...
    
    def ignored_file(self, fname): # -> bool:
        ...
    
    def ignored_file_raw(self, fname): # -> bool:
        ...
    
    def path_in_repo(self, path): # -> bool | None:
        ...
    
    def abs_root_path(self, path): # -> str:
        ...
    
    def get_dirty_files(self): # -> list[Any]:
        """
        Returns a list of all files which are dirty (not committed), either staged or in the working
        directory.
        """
        ...
    
    def is_dirty(self, path=...): # -> bool:
        ...
    
    def get_head_commit(self): # -> Commit | None:
        ...
    
    def get_head_commit_sha(self, short=...): # -> str | None:
        ...
    
    def get_head_commit_message(self, default=...): # -> str | bytes | None:
        ...
    


