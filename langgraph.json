{
    "dockerfile_lines": [
        "RUN apt-get update && apt-get install -y --no-install-recommends \\",
        "    python3-dev \\",
        "    python3 \\",
        "    ca-certificates \\",
        "    python3-numpy \\",
        "    python3-setuptools \\",
        "    python3-wheel \\",
        "    python3-pip \\",
        "    g++ \\",
        "    gcc \\",
        "    ninja-build \\",
        "    cmake \\",
        "    build-essential \\",
        "    autoconf \\",
        "    automake \\",
        "    libtool \\",
        "    libmagic-dev \\",
        "    poppler-utils \\",
        "    libreoffice \\",
        "    libomp-dev \\",
        "    tesseract-ocr \\",
        "    tesseract-ocr-por \\",
        "    libyaml-dev \\",
        "    ffmpeg \\",
        "    libssl-dev \\",
        "    zlib1g-dev \\",
        "    libbz2-dev \\",
        "    libreadline-dev \\",
        "    libsqlite3-dev \\",
        "    wget \\",
        "    curl \\",
        "    llvm \\",
        "    libncurses5-dev \\",
        "    libncursesw5-dev \\",
        "    xz-utils \\",
        "    tk-dev \\",
        "    libffi-dev \\",
        "    liblzma-dev \\",
        "    python3-openssl \\",
        "    git \\",
        "    libpq5 \\",
        "    libpq-dev \\",
        "    libxml2-dev \\",
        "    libxslt1-dev \\",
        "    libcairo2-dev \\",
        "    libgirepository1.0-dev \\",
        "    libgraphviz-dev \\",
        "    libjpeg-dev \\",
        "    libopencv-dev \\",
        "    libpango1.0-dev \\",
        "    libprotobuf-dev \\",
        "    protobuf-compiler \\",
        "    rustc \\",
        "    cargo \\",
        "    libwebp-dev \\",
        "    libzbar0 \\",
        "    libzbar-dev \\",
        "    imagemagick \\",
        "    ghostscript \\",
        "    pandoc \\",
        "    && rm -rf /var/lib/apt/lists/*",

        "# Install UV",
        "RUN curl -LsSf https://astral.sh/uv/install.sh | sh",
        "ENV UV_SYSTEM_PYTHON=1",
        "ENV UV_PIP_DEFAULT_PYTHON=/usr/bin/python3",
        "ENV PATH=\"/root/.cargo/bin:/root/.local/bin:$PATH\"",

        "# Use UV for package installation",
        "RUN uv add pip setuptools wheel",
        "COPY pyproject.toml uv.lock ./",
        "RUN uv sync",

        "# Install development dependencies",
        "RUN uv sync --dev",

        "# Pre-compile bytecode",
        "RUN python3 -m compileall ."
    ],
    "graphs": {
        "router": "./democracy_exe/agentic/graphs/router_graph.py:router_graph",
        "research": "./democracy_exe/agentic/graphs/research_graph.py:research_graph",
        "memory": "./democracy_exe/agentic/graphs/memory_graph.py:memory_graph",
        "image_analysis": "./democracy_exe/agentic/graphs/image_analysis_graph.py:image_analysis_graph",
        "social_media": "./democracy_exe/agentic/graphs/social_media_graph.py:social_media_graph"
    },
    "env": ".env",
    "python_version": "3.12",
    "dependencies": [
        ".",
        "langchain",
        "langgraph",
        "langsmith",
        "discord.py",
        "opencv-python",
        "pillow",
        "numpy",
        "pandas",
        "torch",
        "transformers",
        "pytest",
        "pytest-asyncio",
        "pytest-cov",
        "pytest-recording"
    ],
    "env_vars": {
        "UV_SYSTEM_PYTHON": "1",
        "UV_PIP_DEFAULT_PYTHON": "/usr/bin/python3",
        "PYTHONPATH": "${PYTHONPATH}:${PWD}",
        "PYTHONUNBUFFERED": "1",
        "PYTHONDONTWRITEBYTECODE": "1"
    }
}
