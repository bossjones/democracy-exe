[project]
name = "democracy-exe"
version = "0.0.1"
description = "democracy_exe is an advanced, agentic Python application leveraging LangChain and LangGraph to orchestrate and manage a network of AI agents and subgraphs. This system emulates the principles of 'managed democracy' from the Helldivers universe, automating decision-making processes and task delegation across multiple AI entities. Based on Helldivers."
authors = [{name = "Malcolm Jones", email = "bossjones@theblacktonystark.com"}]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.10,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "better-exceptions>=0.3.3",
    "discord-py>=2.4.0",
    "langchain>=0.3.7",
    "langchain-anthropic>=0.2.4",
    "langchain-chroma>=0.1.4",
    "langchain-community>=0.3.5",
    "langchain-core>=0.3.15",
    "langchain-google-genai>=2.0.4",
    "langchain-groq>=0.2.1",
    "langchain-openai>=0.2.6",
    "langchainhub>=0.1.21",
    "langgraph>=0.2.45",
    "langserve[all]>=0.3.0",
    "aiodebug>=2.3.0",
    "aiofile>=3.9.0",
    "aiofiles>=24.1.0",
    "aiohttp>=3.10.10",
    "aiomonitor>=0.7.0",
    "aioprometheus[starlette]>=23.12.0",
    "aiopytesseract>=0.14.0",
    "aiosql>=12.2",
    "aiosqlite>=0.20.0",
    "asyncer>=0.0.8",
    "beautifulsoup4>=4.12.3",
    "attrs>=24.2.0",
    "babel>=2.16.0",
    "fastapi[all]>=0.115.4",
    "gallery-dl>=1.27.7",
    "imageio>=2.36.0",
    "imutils>=0.5.4",
    "lazy-object-proxy>=1.10.0",
    "logging-tree>=1.10",
    "loguru>=0.7.2",
    "lxml>=5.3.0",
    "markdown>=3.7",
    "matplotlib>=3.9.2",
    "md2pdf>=1.0.1",
    "memory-profiler>=0.61.0",
    "motor>=3.6.0",
    "moviepy>=1.0.3",
    "pinecone-client[grpc]>=5.0.1",
    "pydantic[dotenv,email]>=2.9.2",
    "pydantic-settings>=2.6.1",
    "pyinstrument>=5.0.0",
    "pypdf2>=3.0.1",
    "pypdf>=5.1.0",
    "pdf2image>=1.17.0",
    "pytesseract>=0.3.13",
    "python-decouple>=3.8",
    "python-docx>=1.1.2",
    "python-dotenv>=1.0.1",
    "python-json-logger>=2.0.7",
    "python-levenshtein>=0.26.1",
    "python-slugify>=8.0.4",
    "pytz>=2024.2",
    "rank-bm25>=0.2.2",
    "rapidfuzz>=3.10.1",
    "rapidocr-onnxruntime>=1.3.25",
    "redis>=5.2.0",
    "requests-toolbelt>=1.0.0",
    "requests>=2.32.3",
    "scenedetect[opencv]>=0.6.4",
    "sentence-transformers>=3.2.1",
    "sentencepiece>=0.2.0",
]

[project.urls]
Homepage = "https://bossjones.github.io/democracy-exe/"
Repository = "https://github.com/bossjones/democracy-exe"
Documentation = "https://bossjones.github.io/democracy-exe/"

[tool.uv]
dev-dependencies = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.20.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.6.9",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
]

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["democracy_exe"]

[tool.mypy]
files = ["democracy_exe"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["democracy_exe"]
